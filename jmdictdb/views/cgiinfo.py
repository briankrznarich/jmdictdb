# Copyright (c) 2020 Stuart McGraw
# SPDX-License-Identifier: GPL-2.0-or-later

# This web page will show some details about the CGI/Python execution
# environment and is useful for diagnosing library location confusions.

# WARNING: The page generated by this view will show all items from the
# config.ini files, including those in the config-pvt.ini file (other
# than the db_* sections what are optionally supressed).

# NOTE: this view returns raw HTML rather than data to be rendered
# via a Jinja template.
# Note that unlike CGI scripts which read the jmdictdb config file on
# every html request, the jmapp script reads the config file only once
# when the webserver starts its Python subinterpreter and that configuration
# is used for all following html requests including this one.
# A restart of the Python subinterpreter can be requested without a full
# webserver restart by 'touch'ing the jmapp.wsgi file.

import sys, os, pdb
try: import pkgpath.py  # Make jmdictdb package available on sys.path.
except ImportError: pass

def view (app_config, params):
        '''-------------------------------------------------------------------
        app_config -- The value of the Flask.Application instance's
                      .config attribute.
        params -- URL parameters from the HTTP request.  Not currently used.
        -------------------------------------------------------------------'''
        try: import jmdictdb
        except ImportError:
            content = """\
                <h3>Failed to import jmdictdb</h3>
                Current directory is: %s<br>
                sys.path is: %r"""  % (os.getcwd(), sys.path)
            return Page % content
        from jmdictdb import jdb

        env = []
        env.append (('cwd', os.getcwd()))
        env.append (('View location',
                     os.path.dirname (os.path.abspath (__file__))))
        env.append (('Pkg location',
                     os.path.dirname (os.path.abspath (jdb.__file__))))
        env.append (('sys.path', '%r' % sys.path))
        row_tmpl = "    <tr><td>%s</td><td>%s</td></tr>"
        env_rows = '\n'.join ([row_tmpl % (key.replace(' ','&nbsp;'), value)
                              for key,value in env])

        #pdb.set_trace()
        cfg = app_config['CFG']
        cfgtxt = cfgrender (cfg, show='db')

        html = Page % (env_rows, cfgtxt)
        return html

def cfgrender (cfg, show=''):
        '''-------------------------------------------------------------------
        cfg -- A configparser.ConfigParser instance.
        show -- One of '', 'db', 'pw'.
          '': Show only non-database sections.
          'db': Show the names of the database sections but not any contents.
          'pw': Show the database sections with contents.  Note that the
             contents contain credentials for accessing the database so
             this oprion should not be used except when access to the web-
             server is limited to only trusted personel.
        -------------------------------------------------------------------'''
          #FIXME: The values in the config file have no indication whether
          # they were read from the main config file or the private one.
          # Although we supress the db_ sections, someone might put other
          # settings in the private config and they will be revealed here.
        t = []
        for sec in cfg.sections():
            dbsec = sec.startswith ('db')
            if dbsec and show not in ('db', 'pw'): continue 
            t.append ("[%s]%s" % (sec, (' ...\n'
                                        if dbsec and show=='db' else '')))
            if dbsec and show != 'pw': continue
            for k,v in cfg.items (sec):
                t.append ("  %s = %s" % (k, v))
            t.append ('')
        return '\n'.join (t)

Page = '''<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <title>JMdictDB - Configuration details</title>
  <style>.err {color:red;} td {vertical-align: top;} .pre {white-space: pre;}</style>
  </head>
<body>
  <p>Environment info:
  <table border=1>
    %s
    </table>
  <p>Config info:<br>
    <span class="pre">%s</span>
'''
